void computeLPS (string &pat,vector<int> &LPS,int m){
        int len = 0;
        LPS[0] = 0;
        int i = 1;
        
        while(i < m){
            if(pat[i] == pat[len]){
                len++;
                LPS[i] = len;
                i++;
            }
            
            else{
                if(len != 0){
                    len = LPS[len-1];
                }
                else{
                    LPS[i] = 0;
                    i++;
                }
            }
        }
    }


     vector<int> search(string &pat, string &txt) {
        // code here
        int m = pat.length(); //j
        int n = txt.length(); // i
        
        vector<int>res;
        
        vector<int>LPS(m,0);
        computeLPS(pat,LPS,m);
        
        //Apply Kmp
        int i = 0;
        int j = 0;
        while(i < n){ 
            if(pat[j] == txt[i]){
                i++;
                j++;
            }
            
            if(j == m){ //found
                res.push_back(i-j);
                j = LPS[j-1];
            }
            
            else if(pat[j] != txt[i]){
                if(j != 0){
                    j = LPS[j-1];
                }
                else{
                    i++; //not matched and j is at 0th index,so move i for matching
                }
            }
        }
        
        return res;
    }